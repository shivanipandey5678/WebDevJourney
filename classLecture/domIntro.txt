
attribute node
comment node
text node
element node


class gives u js object which is like array but not actual array.returns html collection
we can not use foreach,map and all over it.
GetElementById, GetElementByClass, TagAllReturns, HTMLCollection, Button, QuerySelectAllReturns, NodeList NodeList is more like an array, we can only use for each on it, HTMLCollection we can't use any hof.

dom update htmlcollection will update.
same not for node list it will not update so it is static

html collection have only element node.
node collection have every node comment node,text node.
dont give id again again use combinater in queryselector

documnet.body.style.backgroundColor="pink"
appendChile (append 1 child only)
append(multiple)..
document.querySelector('img').src="you can provide"
document.querySelector('img').style.height="100px"
when ever you are creating any img plz have a habit to append it inside div so that u can easily apply styling into it.

//react notes
npm create vite@latest my-app -- --template react
cd my-app
npm install
npm run dev

üìÑ Short Notes: .json() in JS
Server se response JSON format wale string (text) mein aata hai, JavaScript object nahi.
.json() method us string ko JavaScript object mein convert karta hai taaki hum uska use kar saken.
Ye internally JSON.parse() use karta hai.


//updater function k 2 task hota hai change state and cause rerender.
//dom mei rerender k scene nhi tha refresh tha jo tha but i react if fetching function ki calling globally kar di ek update ke baad usstate rerender karega and file fir exicute honi start ho jaayegi ye chij fir fetch function ko call kar dega isse infinite loop start ho jaayega.
//while writing or printing list in jsx item.map(()=>(
    //never give {} react think it is js use only ()
))


---

### üñ±Ô∏è **Mouse Events**

* `click`
* `dblclick`
* `mousedown`
* `mouseup`
* `mousemove`
* `mouseenter`
* `mouseleave`
* `mouseover`
* `mouseout`
* `contextmenu`

---

### ‚å®Ô∏è **Keyboard Events**

* `keydown`
* `keyup`
* `keypress` *(deprecated)*

---

### üßæ **Form/Input Events**

* `change`
* `input`
* `focus`
* `blur`
* `submit`

document.GetElementById("root").children
document.GetElementById("root").parentElement
//if it is html collection u can use normal loop if it is ode u can use for each.

//script mei type.babel likho or root bhai ReactDOM.craeteRoot se hi hoga.niche hi App banana hai.

Sure! Here's a **short and clear JWT notes** version:

---

### ‚úÖ **JWT (JSON Web Token) ‚Äì Notes**

üì¶ **Structure**:

```
HEADER.PAYLOAD.SIGNATURE
```

---

### 1Ô∏è‚É£ **Header** (Base64)

```json
{
  "alg": "HS256",
  "typ": "JWT"
}
```

---

### 2Ô∏è‚É£ **Payload** (Base64)

Contains user data like:

```json
{
  "userId": "abc123",
  "email": "abc@example.com",
  "exp": 1712345678
}
```

---

### 3Ô∏è‚É£ **Signature**

Used to verify token:

```
HMACSHA256(header + "." + payload, secret)
```

---

### üîê **Why JWT?**

* Securely pass user data
* Used for authentication (login sessions)
* Can be verified without DB lookup

---

Let me know if you want Hindi + Hinglish version too!

Absolutely! Here's a clean **remember note** you can directly save in your notes:

---

### üîê JWT Authorization Header ‚Äì Quick Reminder Note

‚úÖ **Always write this in Postman/Thunder Client header:**

```
Key: Authorization
Value: Bearer <your_token>
```

üìå **"Bearer" is required** ‚Äî if you skip it or spell it wrong (`beerer`), you‚Äôll get:

```
Error: jwt must be provided
```

üß† **Backend (Node.js/Express)**:

* Use: `req.headers.authorization` (lowercase only ‚úÖ)
* Even if the client sends `"Authorization"`, Express auto-converts it to lowercase.

‚úÖ So in backend:

```js
const authHeader = req.headers.authorization;
const token = authHeader.split(' ')[1];
```

---

üìå **Remember**:

> Use **"Authorization"** (capital A) in the request.
> Use **`authorization`** (small a) in the backend.

---

Let me know if you want this as a `.txt` or `.md` file to download too!


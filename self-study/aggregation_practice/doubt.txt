Chalo isko aur **simple** tareeke se samjhte hain — bas 2 rule yaad rakho:

---

## 🤔 Confusion:

`fees` ke aage `$` kyu nahi?
`"$speciality"` ke aage `$` kyu laga?

---

## ✅ RULE 1:

### 👉 Jab tum **field ka naam likh rahe ho (left side)**

To **`$` nahi lagta**

```js
{ fees: { $lt: 30 } }
```

➡️ Matlab: “fees ki value 30 se kam ho”

🧠 Yahan `fees` document ke andar ek field hai — **left side** hai, to bina `$` ke.

---

## ✅ RULE 2:

### 👉 Jab tum **field ki value lena chahte ho (right side)**

To **`$` lagta hai**

```js
{ _id: "$speciality" }
```

➡️ Matlab: “\_id ki value, speciality field ke barabar rakho”

🧠 Yahan `"$speciality"` ka matlab hai: **speciality field ki value lo**

---

### ⚠️ `$` lagta hai sirf jab:

* Tum **field ki value** use kar rahe ho
* Right side mein jaise: `$group`, `$project`, `$addFields`, etc.

---

## 🔁 Real-life analogy:

Socho ek doctor ka record hai:

```js
{
  name: "Dr. Khan",
  speciality: "Cardiology",
  fees: 500
}
```

### 🔹 Tum keh rahe ho:

> “fees 500 se kam ho”
> ➡️ `{ fees: { $lt: 500 } }`
> **fees left mein — no `$`**

---

### 🔹 Tum keh rahe ho:

> “speciality ki value lo aur usse group banao”
> ➡️ `{ _id: "$speciality" }`
> **speciality right mein — so `$speciality`**

---

Agar ab bhi confusion hai, to mujhe tumhara exact sentence batao jo tum samajhna chah rahi ho — main ussi example pe explain kar dungi.

[
  { $group: { _id: null, averageFees: { $avg: "$fees" } } }
]

Bahut badhiya sawaal! 👇

> MongoDB aggregation mein kaun **stage** hai aur kaun **operator** — ye kaise pata karein?

---

## ✅ 1. Aggregation Pipeline **Stages** kya hote hain?

Ye woh **top-level blocks** hote hain jo aggregation pipeline mein use hote hain — jaise `$match`, `$group`, `$project`, `$count`, etc.

### 🔹 Yeh likhte ho array ke andar:

```js
[
  { $match: { fees: { $lt: 500 } } },
  { $group: { _id: "$speciality", total: { $sum: 1 } } },
  { $count: "totalDocs" }
]
```

---

## ✅ 2. Aggregation **Operators** kya hote hain?

Yeh woh hote hain jo kisi **field ki calculation** ya **comparison** ke liye use hote hain — jaise `$sum`, `$avg`, `$lt`, `$eq`, `$multiply`, etc.

### 🔹 Yeh likhte ho kisi stage ke **andar**:

```js
{ $sum: 1 }
{ $avg: "$fees" }
{ $lt: 500 }
```

---

## 📌 Kaise yaad rakhen: Stage vs Operator

| Stage (Pipeline) | Description        | Example                                                  |
| ---------------- | ------------------ | -------------------------------------------------------- |
| `$match`         | Filter karo        | `{ $match: { fees: { $lt: 500 } } }`                     |
| `$group`         | Group banao        | `{ $group: { _id: "$speciality", count: { $sum: 1 } } }` |
| `$project`       | Fields select karo | `{ $project: { name: 1, fees: 1 } }`                     |
| `$count`         | Total count do     | `{ $count: "totalDocs" }`                                |
| `$sort`          | Sorting karo       | `{ $sort: { fees: -1 } }`                                |

---

| Operator               | Description    | Use Inside           |
| ---------------------- | -------------- | -------------------- |
| `$sum`                 | Total jodna    | `$group`, `$project` |
| `$avg`                 | Average lena   | `$group`, `$project` |
| `$lt`                  | Less than      | `$match`             |
| `$eq`                  | Equal to       | `$match`, `$cond`    |
| `$multiply`            | Multiply karna | `$project`           |
| `$toInt` / `$toString` | Type convert   | `$project`           |

---

## 🎯 Real Example:

```js
[
  {
    $match: { fees: { $lt: 500 } }         // ✅ stage
  },
  {
    $group: {
      _id: "$speciality",                  // ✅ stage
      avgFees: { $avg: "$fees" }           // ✅ operator
    }
  },
  {
    $count: "totalGroups"                  // ✅ stage
  }
]
```

---

## 🧠 Memory Tip:

* **Stage** = Top level block in pipeline
* **Operator** = Inner tool used **inside stages**

---

Agar chaho to main tumhe cheat-sheet ya image banake bhi de sakti ho — ya tumhare use-case pe guide kar sakti ho kaunsa kab use karna hai.


✅ _id: null ka matlab:
"Sabhi documents ko ek hi group mein daal do"

$lookup